A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN OS_CPU_A.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE OS\OS_CPU_A.asm SET(LARGE) DEBUG PRINT(.\OS_CPU_A.lst) OBJECT(OS_CPU_A.obj
                      ) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     
  00AF                 3     EA      BIT         0A8H.7
  0081                 4     SP      DATA    081H
  00F0                 5     B       DATA    0F0H
  00E0                 6     ACC     DATA    0E0H
  0083                 7     DPH     DATA    083H
  0082                 8     DPL     DATA    082H
  00D0                 9     PSW     DATA    0D0H
  008C                10     TR0     BIT         088H.4
  008C                11     TH0     DATA    08CH
  008A                12     TL0     DATA    08AH
                      13     
  00B1                14     TIMER_10MS_TH0  EQU      0B1H   ;CPU=4MHz, OS_TICKS_PER_SEC=20000, TH0=0xF2
  00E0                15     TIMER_10MS_TL0  EQU      0E0H   ;CPU=4MHz, OS_TICKS_PER_SEC=20000, TL0=0xd8
                      16     
                      17     NAME    OS_CPU_A
                      18     
                      19     ?PR?OSStartHighRdy?OS_CPU_A    SEGMENT CODE
                      20     ?PR?OSTickISR?OS_CPU_A         SEGMENT CODE
                      21     ?PR?OSCtxSw?OS_CPU_A           SEGMENT CODE
                      22     ?PR?OSIntCtxSw?OS_CPU_A        SEGMENT CODE
                      23     
                      24     ;…˘√˜“”√»´æ÷±‰¡ø∫ÕÕ‚≤ø◊”≥Ã–Ú
                      25             EXTRN DATA  (?C_XBP)    ;∑¬’Ê∂—’ª÷∏’Î”√”⁄ø…÷ÿ»Îæ÷≤ø±‰¡ø±£¥Ê
                      26     
                      27             EXTRN IDATA (OSTCBCur)
                      28             EXTRN IDATA (OSTCBHighRdy)
                      29             EXTRN IDATA (OSPrioCur)
                      30             EXTRN IDATA (OSPrioHighRdy)
                      31                     
                      32                     EXTRN CODE      (_?OSTimeTick)  
                      33                     EXTRN CODE  (_?OSIntEnter)
                      34             EXTRN CODE  (_?OSIntExit)
                      35                     
                      36                     PUBLIC OSStartHighRdy
                      37                     PUBLIC OSCtxSw
                      38                     PUBLIC OSIntCtxSw
                      39                     PUBLIC OSTickISR
                      40                     
                      41                     
                      42     ;∑÷≈‰∂—’ªø’º‰°£÷ªπÿ–ƒ¥Û–°£¨∂—’ª∆µ„”…keilæˆ∂®£¨Õ®π±Í∫≈ø…“‘ªÒµ√keil∑÷≈‰µƒSP∆µ„
                      43     ?STACK SEGMENT IDATA
----                  44             RSEG ?STACK             
0000                  45     OSStack:
                      46                     ;DS n£∫±£¡Ùn∏ˆ¥Ê¥¢µ•‘™
0000                  47             DS 40H          ;∑÷≈‰”≤º˛∂—’ªµƒ¥Û–°
                      48     
  FFFF                49     OSStkStart IDATA OSStack-1
                      50     
                      51     ;∂®“Â—π’ª≥ˆ’ª∫Í
                      52     PUSHALL    MACRO
                      53             PUSH PSW
                      54             PUSH ACC
                      55             PUSH B
                      56             PUSH DPL
                      57             PUSH DPH
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     2

                      58             MOV  A,R0       ;R0~R7»Î’ª
                      59             PUSH ACC
                      60             MOV  A,R1
                      61             PUSH ACC
                      62             MOV  A,R2
                      63             PUSH ACC
                      64             MOV  A,R3
                      65             PUSH ACC
                      66             MOV  A,R4
                      67             PUSH ACC
                      68             MOV  A,R5
                      69             PUSH ACC
                      70             MOV  A,R6
                      71             PUSH ACC
                      72             MOV  A,R7
                      73             PUSH ACC
                      74             ;PUSH SP        ;≤ª±ÿ±£¥ÊSP£¨»ŒŒÒ«–ªª ±”…œ‡”¶≥Ã–Úµ˜’˚
                      75             ENDM
                      76         
                      77     POPALL    MACRO
                      78             ;POP  ACC       ;≤ª±ÿ±£¥ÊSP£¨»ŒŒÒ«–ªª ±”…œ‡”¶≥Ã–Úµ˜’˚
                      79             POP  ACC        ;R0~R7≥ˆ’ª
                      80             MOV  R7,A
                      81             POP  ACC
                      82             MOV  R6,A
                      83             POP  ACC
                      84             MOV  R5,A
                      85             POP  ACC
                      86             MOV  R4,A
                      87             POP  ACC
                      88             MOV  R3,A
                      89             POP  ACC
                      90             MOV  R2,A
                      91             POP  ACC
                      92             MOV  R1,A
                      93             POP  ACC
                      94             MOV  R0,A
                      95             POP  DPH
                      96             POP  DPL
                      97             POP  B
                      98             POP  ACC
                      99             POP  PSW
                     100             ENDM
                     101             
----                 102             RSEG ?PR?OSStartHighRdy?OS_CPU_A
                     103     
                     104     ;µ˜”√”√ªß¿©’π∫Ø OSTaskSwHook()
                     105     ;OSRunning=TRUE
                     106     ;»°µ√Ω´“™ª÷∏¥µƒ»ŒŒÒµƒ∂—’ª÷∏’Î£∫Stack pointer=OSTCBHighRdy->OSTCBStkPtr
                     107     ;Ω´À˘”–ºƒ¥Ê∆˜ƒ⁄»›¥”»ŒŒÒ’ª÷–µØ≥ˆ¿¥
                     108     ;÷¥––÷–∂œ∑µªÿ÷∏¡Ó
                     109     
0000                 110     OSStartHighRdy:
                     111     
                     112             USING 0         ;…œµÁ∫Û51◊‘∂Øπÿ÷–∂œ£¨¥À¥¶≤ª±ÿ”√CLR EA÷∏¡Ó£¨“ÚŒ™µΩ¥À¥¶ªπŒ¥ø™÷–∂œ£¨±æ
                             ≥Ã–ÚÕÀ≥ˆ∫Û£¨ø™÷–∂œ
                     113             ;LCALL _?OSTaskSwHook
                     114                   
                     115     
                     116     ;--------------------
                     117     ;OSCtxSw_in
                     118     ;--------------------
0000                 119     OSCtxSw_in:
                     120     
                     121             ;OSTCBHighRdy ==> DPTR ªÒµ√µ±«∞æÕ–˜µƒ◊Ó∏ﬂ”≈œ»º∂»ŒŒÒµƒTCB÷∏’Î
0000 7800     F      122             MOV  R0,#LOW (OSTCBHighRdy)     ;ªÒµ√OSTCBHighRdy÷∏’ÎµÕµÿ÷∑£¨÷∏’Î’º3B°£+0¿‡–Õ +1∏ﬂ8
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     3

                             Œª æ› +2µÕ8Œª æ›
0002 08              123             INC  R0
0003 8683            124             MOV  DPH,@R0    ;»´æ÷±‰¡øOSTCBHighRdy‘⁄IDATA÷–
0005 08              125             INC  R0
0006 8682            126             MOV  DPL,@R0
                     127         
                     128             ;OSTCBHighRdy->OSTCBStkPtr ==> DPTR ªÒµ√”√ªß∂—’ª÷∏’Î
0008 A3              129             INC  DPTR               ;÷∏’Î’º3B°£+0¿‡–Õ +1∏ﬂ8Œª æ› +2µÕ8Œª æ›
0009 E0              130             MOVX A,@DPTR    ;OSTCBStkPtr «void÷∏’Î
000A F8              131             MOV  R0,A
000B A3              132             INC  DPTR
000C E0              133             MOVX A,@DPTR
000D F9              134             MOV  R1,A
000E 8883            135             MOV  DPH,R0
0010 8982            136             MOV  DPL,R1
                     137         
                     138             ;*UserStkPtr ==> R5 ”√ªß∂—’ª∆ ºµÿ÷∑ƒ⁄»›(º¥”√ªß∂—’ª≥§∂»∑≈‘⁄¥À¥¶)   
0012 E0              139             MOVX A,@DPTR    ;”√ªß∂—’ª÷– «unsigned char¿‡–Õ æ›
0013 FD              140             MOV  R5,A               ;R5=”√ªß∂—’ª≥§∂»
                     141         
                     142             ;ª÷∏¥œ÷≥°∂—’ªƒ⁄»›
0014 7800     F      143             MOV  R0,#OSStkStart
0016                 144     restore_stack:
                     145         
0016 A3              146             INC  DPTR
0017 08              147             INC  R0
0018 E0              148             MOVX A,@DPTR
0019 F6              149             MOV  @R0,A
001A DDFA            150             DJNZ R5,restore_stack
                     151         
                     152             ;ª÷∏¥∂—’ª÷∏’ÎSP
001C 8881            153             MOV  SP,R0
                     154         
                     155             ;ª÷∏¥∑¬’Ê∂—’ª÷∏’Î?C_XBP        
001E A3              156             INC  DPTR
001F E0              157             MOVX A,@DPTR
0020 F500     F      158             MOV  ?C_XBP,A   ;?C_XBP ∑¬’Ê∂—’ª÷∏’Î∏ﬂ8Œª
0022 A3              159             INC  DPTR
0023 E0              160             MOVX A,@DPTR
0024 F500     F      161             MOV  ?C_XBP+1,A ;?C_XBP ∑¬’Ê∂—’ª÷∏’ÎµÕ8Œª
                     162       
                     163             POPALL
0048 D2AF            186             SETB EA         ;ø™÷–∂œ
004A 32              187             RETI
                     188     
                     189     
                     190     
----                 191            RSEG ?PR?OSCtxSw?OS_CPU_A
                     192     
                     193     ;±£¥Ê¥¶¿Ì∆˜ºƒ¥Ê∆˜
                     194     ;Ω´µ±«∞»ŒŒÒµƒ∂—’ª÷∏’Î±£¥ÊµΩµ±«∞»ŒŒÒµƒOS_TCB÷–£∫OSTCBCur->OSTCBStkPtr=Stack pointer
                     195     ;OSTCBCur=OSTCBHighRdy
                     196     ;OSPrioCur=OSPrioHighRdy
                     197     ;µ√µΩ–Ë“™ª÷∏¥µƒ»ŒŒÒµƒ∂—’ª÷∏’Î£∫Stack pointer=OSTCBHighRdy->OSTCBStkPtr
                     198     ;Ω´À˘”–¥¶¿Ì∆˜ºƒ¥Ê∆˜¥”–¬»ŒŒÒµƒ∂—’ª÷–ª÷∏¥≥ˆ¿¥
                     199     ;÷¥––÷–∂œ∑µªÿ÷∏¡Ó
0000                 200     OSCtxSw:  
                     201     
                     202             USING 0  
                     203             PUSHALL
0022                 226     OSIntCtxSw_in:
                     227     
                     228             ;ªÒµ√∂—’ª≥§∂»∫Õ∆ ºµÿ÷∑£¨»ŒŒÒ’ªΩ·ππ æ“‚Õº(OS_CPU_C.C)
0022 E581            229             MOV  A,SP
0024 C3              230             CLR  C  ;Ω¯Œª±Í÷æŒªCy«Â¡„
0025 9400     F      231             SUBB A,#OSStkStart      ;A <- A-OSStkStart-Cy
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     4

0027 FD              232             MOV  R5,A     ;ªÒµ√∂—’ª≥§∂»        
                     233         
                     234             ;OSTCBCur ==> DPTR  ªÒµ√µ±«∞TCB÷∏’Î
0028 7800     F      235             MOV  R0,#LOW (OSTCBCur) ;ªÒµ√OSTCBCur÷∏’ÎµÕµÿ÷∑£¨÷∏’Î’º3B°£+0¿‡–Õ +1∏ﬂ8Œª æ› +2µÕ8Œ
                             ª æ›
002A 08              236             INC  R0
002B 8683            237             MOV  DPH,@R0    ;»´æ÷±‰¡øOSTCBCur‘⁄IDATA÷–
002D 08              238             INC  R0
002E 8682            239             MOV  DPL,@R0
                     240         
                     241             ;OSTCBCur->OSTCBStkPtr ==> DPTR  ªÒµ√”√ªß∂—’ª÷∏’Î
0030 A3              242             INC  DPTR        ;÷∏’Î’º3B°£+0¿‡–Õ +1∏ﬂ8Œª æ› +2µÕ8Œª æ›
0031 E0              243             MOVX A,@DPTR     ;OSTCBStkPtr «void÷∏’Î
0032 F8              244             MOV  R0,A
0033 A3              245             INC  DPTR
0034 E0              246             MOVX A,@DPTR
0035 F9              247             MOV  R1,A
0036 8883            248             MOV  DPH,R0
0038 8982            249             MOV  DPL,R1
                     250             
                     251             ;±£¥Ê∂—’ª≥§∂»
003A ED              252             MOV  A,R5
003B F0              253             MOVX @DPTR,A
                     254     
003C 7800     F      255             MOV  R0,#OSStkStart     ;ªÒµ√∂—’ª∆ ºµÿ÷∑
                     256     
                     257     ;--------------------
                     258     ;save_stack
                     259     ;--------------------
                     260     
003E                 261     save_stack:
                     262        
003E A3              263             INC  DPTR
003F 08              264             INC  R0
0040 E6              265             MOV  A,@R0
0041 F0              266             MOVX @DPTR,A
0042 DDFA            267             DJNZ R5,save_stack
                     268             
                     269             ;±£¥Ê∑¬’Ê∂—’ª÷∏’Î?C_XBP
0044 A3              270             INC  DPTR
0045 E500     F      271             MOV  A,?C_XBP   ;?C_XBP ∑¬’Ê∂—’ª÷∏’Î∏ﬂ8Œª
0047 F0              272             MOVX @DPTR,A
0048 A3              273             INC  DPTR
0049 E500     F      274             MOV  A,?C_XBP+1 ;?C_XBP ∑¬’Ê∂—’ª÷∏’ÎµÕ8Œª
004B F0              275             MOVX @DPTR,A        
                     276         
                     277             ;µ˜”√”√ªß≥Ã–Ú
                     278             ;LCALL _?OSTaskSwHook
                     279     
                     280             ;OSTCBCur = OSTCBHighRdy
004C 7800     F      281             MOV  R0,#OSTCBCur
004E 7900     F      282                     MOV  R1,#OSTCBHighRdy
0050 E7              283                     MOV  A,@R1
0051 F6              284             MOV  @R0,A
0052 08              285             INC  R0
0053 09              286                     INC  R1
0054 E7              287                     MOV  A,@R1
0055 F6              288             MOV  @R0,A
0056 08              289             INC  R0
0057 09              290                     INC  R1
0058 E7              291                     MOV  A,@R1
0059 F6              292             MOV  @R0,A
                     293                     
                     294             ;OSPrioCur = OSPrioHighRdy  π”√’‚¡Ω∏ˆ±‰¡ø÷˜“™ƒøµƒ «Œ™¡À π÷∏’Î±»Ωœ±‰Œ™◊÷Ω⁄±»Ωœ£¨“‘±„
                             Ω⁄ ° ±º‰
005A 7800     F      295             MOV  R0,#OSPrioCur
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     5

005C 7900     F      296                     MOV  R1,#OSPrioHighRdy
005E E7              297                     MOV  A,@R1
005F F6              298             MOV  @R0,A
                     299             
0060 020000   F      300             LJMP OSCtxSw_in
                     301     
----                 302     RSEG ?PR?OSIntCtxSw?OS_CPU_A
                     303     
                     304     ;µ˜’˚∂—’ª÷∏’Î¿¥»•µÙ‘⁄µ˜”√π≥Ã÷–—π»Î∂—’ªµƒ∂‡”‡ƒ⁄»›
                     305     ;Ω´µ±«∞»ŒŒÒ∂—’ª÷∏’Î±£¥ÊµΩµ±«∞»ŒŒÒµƒOS_TCB÷–£∫OSTCBCur->OSTCBStkPtr=Stack pointer
                     306     ;µ˜”√”√ªß¿©’π∫Ø OSTaskSwHook()
                     307     ;OSTCBCur=OSTCBHighRdy
                     308     ;OSPrioCur=OSPrioHighRdy
                     309     ;µ√µΩ–Ë“™ª÷∏¥µƒ»ŒŒÒµƒ∂—’ª÷∏’Î£∫Stack pointer=OSTCBHighRdy->OSTCBStkPtr
                     310     ;Ω´À˘”–¥¶¿Ì∆˜ºƒ¥Ê∆˜¥”–¬»ŒŒÒµƒ∂—’ª÷–ª÷∏¥≥ˆ¿¥
                     311     ;÷¥––÷–∂œ∑µªÿ÷∏¡Ó
                     312             
0000                 313     OSIntCtxSw:
                     314     
                     315             USING 0
                     316     
                     317                     ;µ˜’˚SP÷∏’Î»•µÙ‘⁄µ˜”√OSIntExit()°¢OSIntCtxSw()π≥Ã÷–—π»Î∂—’ªµƒ∂‡”‡ƒ⁄»›
                     318                     ;SP=SP-4
0000 E581            319                     MOV  A,SP
0002 C3              320                     CLR  C
0003 9404            321                     SUBB A,#4
0005 F581            322                     MOV  SP,A
                     323     
                     324                     ;LCALL _?OSTaskSwHook
0007 020000   F      325             LJMP OSIntCtxSw_in
                     326     
                     327     
                     328     ;                       -------------------------------------------
                     329     ;                       --------------- OSTickISR() ---------------
                     330     ;                       -------------------------------------------
                     331                     
----                 332     CSEG AT 000BH   ;∂® ±∆˜T0÷–∂œ
                     333     ;CSEG [AT æ¯∂‘µÿ÷∑±Ì¥Ô Ω] //æ¯∂‘¥˙¬Î∂Œ
                     334     ;DSEG [AT æ¯∂‘µÿ÷∑±Ì¥Ô Ω] //ƒ⁄≤øæ¯∂‘ æ›∂Œ
                     335     ;XSEG [AT æ¯∂‘µÿ÷∑±Ì¥Ô Ω] //Õ‚≤øæ¯∂‘ æ›∂Œ
                     336     ;ISEG [AT æ¯∂‘µÿ÷∑±Ì¥Ô Ω] //ƒ⁄≤øº‰Ω”—∞÷∑æ¯∂‘ æ›∂Œ
                     337     ;BSEG [AT æ¯∂‘µÿ÷∑±Ì¥Ô Ω] //æ¯∂‘Œª—∞÷∑∂Œ
000B 020000   F      338             LJMP OSTickISR
                     339                     
----                 340     RSEG ?PR?OSTickISR?OS_CPU_A
                     341     
                     342     ;πÿ÷–∂œ
                     343     ;±£¥Ê¥¶¿Ì∆˜ºƒ¥Ê∆˜µƒ÷µ
                     344     ;µ˜”√OSIntEnter()ªÚ «Ω´OSIntNestingº”1
                     345     ;πÿ ±÷”÷–∂œ
                     346     ;µ˜”√OSTimeTick()
                     347     ;ø™ ±÷”÷–∂œ
                     348     ;µ˜”√OSIntExit()
                     349     ;ª÷∏¥¥¶¿Ì∆˜ºƒ¥Ê∆˜µƒ÷µ
                     350     ;÷ÿ–¬‘ –Ì÷–∂œ
                     351     ;÷¥––÷–∂œ∑µªÿ÷∏¡Ó
0000                 352     OSTickISR:
                     353                     USING   0
0000 C2AF            354                     CLR     EA
                     355                     PUSHALL         
0024 120000   F      378                     LCALL _?OSIntEnter      ;Õ®÷™ƒ⁄∫ÀΩ¯»Î÷–∂œ
0027 C28C            379                     CLR             TR0
0029 758CB1          380                     MOV             TH0,#TIMER_10MS_TH0
002C 758AE0          381                     MOV     TL0,#TIMER_10MS_TL0
002F 120000   F      382                     LCALL   _?OSTimeTick;
0032 D28C            383                     SETB    TR0
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     6

0034 120000   F      384                     LCALL _?OSIntExit       ;Õ®÷™ƒ⁄∫ÀÕÀ≥ˆ÷–∂œ
                     385                     POPALL
0059 D2AF            408                     SETB    EA
005B 32              409                     RETI
                     410                     
                     411             END
                                                     
A51 MACRO ASSEMBLER  OS_CPU_A                                                             11/27/2018 10:03:57 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E                      T Y P E  V A L U E   ATTRIBUTES

?C_XBP. . . . . . . . . . .  D ADDR   -----       EXT
?PR?OSCTXSW?OS_CPU_A. . . .  C SEG    0063H       REL=UNIT
?PR?OSINTCTXSW?OS_CPU_A . .  C SEG    000AH       REL=UNIT
?PR?OSSTARTHIGHRDY?OS_CPU_A  C SEG    004BH       REL=UNIT
?PR?OSTICKISR?OS_CPU_A. . .  C SEG    005CH       REL=UNIT
?STACK. . . . . . . . . . .  I SEG    0040H       REL=UNIT
ACC . . . . . . . . . . . .  D ADDR   00E0H   A   
B . . . . . . . . . . . . .  D ADDR   00F0H   A   
DPH . . . . . . . . . . . .  D ADDR   0083H   A   
DPL . . . . . . . . . . . .  D ADDR   0082H   A   
EA. . . . . . . . . . . . .  B ADDR   00A8H.7 A   
OSCTXSW . . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSCTXSW?OS_CPU_A
OSCTXSW_IN. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSSTARTHIGHRDY?OS_CPU_A
OSINTCTXSW. . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSINTCTXSW?OS_CPU_A
OSINTCTXSW_IN . . . . . . .  C ADDR   0022H   R   SEG=?PR?OSCTXSW?OS_CPU_A
OSPRIOCUR . . . . . . . . .  I ADDR   -----       EXT
OSPRIOHIGHRDY . . . . . . .  I ADDR   -----       EXT
OSSTACK . . . . . . . . . .  I ADDR   0000H   R   SEG=?STACK
OSSTARTHIGHRDY. . . . . . .  C ADDR   0000H   R   SEG=?PR?OSSTARTHIGHRDY?OS_CPU_A
OSSTKSTART. . . . . . . . .  I ADDR   FFFFH   R   SEG=?STACK
OSTCBCUR. . . . . . . . . .  I ADDR   -----       EXT
OSTCBHIGHRDY. . . . . . . .  I ADDR   -----       EXT
OSTICKISR . . . . . . . . .  C ADDR   0000H   R   SEG=?PR?OSTICKISR?OS_CPU_A
OS_CPU_A. . . . . . . . . .  N NUMB   -----       
PSW . . . . . . . . . . . .  D ADDR   00D0H   A   
RESTORE_STACK . . . . . . .  C ADDR   0016H   R   SEG=?PR?OSSTARTHIGHRDY?OS_CPU_A
SAVE_STACK. . . . . . . . .  C ADDR   003EH   R   SEG=?PR?OSCTXSW?OS_CPU_A
SP. . . . . . . . . . . . .  D ADDR   0081H   A   
TH0 . . . . . . . . . . . .  D ADDR   008CH   A   
TIMER_10MS_TH0. . . . . . .  N NUMB   00B1H   A   
TIMER_10MS_TL0. . . . . . .  N NUMB   00E0H   A   
TL0 . . . . . . . . . . . .  D ADDR   008AH   A   
TR0 . . . . . . . . . . . .  B ADDR   0088H.4 A   
_?OSINTENTER. . . . . . . .  C ADDR   -----       EXT
_?OSINTEXIT . . . . . . . .  C ADDR   -----       EXT
_?OSTIMETICK. . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
